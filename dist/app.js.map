{"version":3,"sources":["scripts/input.component.js"],"names":["MNInput","validTypes","dom","this","createShadowRoot","input","document","createElement","setAttribute","getAttribute","attributeType","isValidType","indexOf","value","name","disabled","appendChild","placeholder","label","textContent","prototype","Object","create","HTMLElement","createdCallback","registerElement"],"mappings":"YAIA,SAASA,WACP,GAAIC,aACF,OACA,WACA,SAGEC,IAAMC,KAAKC,mBAEXC,MAAQC,SAASC,cAAc,QACnCF,OAAMG,aAAa,cAAeL,KAAKM,aAAa,gBAAkB,YAGtE,IAAIC,eAAgBP,KAAKM,aAAa,QAClCE,YAAcV,WAAWW,QAAQF,gBAAkB,CACvDA,eAAgBC,YACZD,cACAT,WAAW,GAEfI,MAAMG,aAAa,OAAQE,cAG3B,IAAIG,OAAQV,KAAKM,aAAa,UAAY,EAC1CJ,OAAMG,aAAa,QAASK,MAG5B,IAAIC,MAAOX,KAAKM,aAAa,SAAW,EACxCJ,OAAMG,aAAa,OAAQM,MAG3BT,MAAMG,aAAa,eAAgB,OAGI,cAAnCL,KAAKM,aAAa,cACpBJ,MAAMG,aAAa,YAAa,aAI9BL,KAAKM,aAAa,cACpBJ,MAAMG,aAAa,YAAaL,KAAKM,aAAa,aAIpD,IAAIM,UAAWZ,KAAKM,aAAa,WAC7BM,WACFV,MAAMG,aAAa,WAAYO,UAEjCb,IAAIc,YAAYX,MAGhB,IAAIY,aAAcd,KAAKM,aAAa,cACpC,IAAGQ,YAAa,CACd,GAAIC,OAAQZ,SAASC,cAAc,QACnCW,OAAMC,YAAcJ,SACbE,YADa,YAEhBA,YACJf,IAAIc,YAAYE,QA5DpB,GAAIE,WAAYC,OAAOC,OAAOC,YAAYH,UAC1CA,WAAUI,gBAAkBxB,QAC5BM,SAASmB,gBAAgB,YAAaL,UAAAA","file":"app.js","sourcesContent":["let prototype = Object.create(HTMLElement.prototype);\nprototype.createdCallback = MNInput;\ndocument.registerElement('mn-input', {prototype});\n\nfunction MNInput() {\n  let validTypes = [\n    'text',\n    'password',\n    'email',\n  ];\n\n  let dom = this.createShadowRoot();\n\n  let input = document.createElement('input');\n  input.setAttribute('placeholder', this.getAttribute('placeholder') || 'undefined');\n\n  // type attribute\n  let attributeType = this.getAttribute('type');\n  let isValidType = validTypes.indexOf(attributeType) >= 0;\n  attributeType = isValidType\n    ? attributeType\n    : validTypes[0];\n\n  input.setAttribute('type', attributeType);\n\n  // value attribute\n  let value = this.getAttribute('value') || '';\n  input.setAttribute('value', value);\n\n  // name attribute\n  let name = this.getAttribute('name') || '';\n  input.setAttribute('name', name);\n\n  // autocomplete attribute\n  input.setAttribute('autocomplete', 'off');\n\n  // autofocus attribute\n  if (this.getAttribute('autofocus') === 'autofocus') {\n    input.setAttribute('autofocus', 'autofocus');\n  }\n\n  // maxlength attribute\n  if (this.getAttribute('maxlength')) {\n    input.setAttribute('maxlength', this.getAttribute('maxlength'));\n  }\n\n  // disabled attribute\n  let disabled = this.getAttribute('disabled');\n  if (disabled) {\n    input.setAttribute('disabled', disabled);\n  }\n  dom.appendChild(input);\n\n  // placeholder element\n  let placeholder = this.getAttribute('placeholder');\n  if(placeholder) {\n    let label = document.createElement('label');\n    label.textContent = disabled\n      ? `${placeholder} disabled`\n      : placeholder;\n    dom.appendChild(label);\n  }\n}\n"],"sourceRoot":"/source/"}