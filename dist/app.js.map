{"version":3,"sources":["scripts/input.component.js"],"names":["MNInput","validTypes","input","document","createElement","setAttribute","this","getAttribute","attributeType","isValidType","indexOf","value","name","disabled","appendChild","placeholder","label","textContent","prototype","Object","create","HTMLElement","createdCallback","registerElement"],"mappings":"YAIA,SAASA,WACP,GAAIC,aACF,OACA,WACA,SAGEC,MAAQC,SAASC,cAAc,QACnCF,OAAMG,aAAa,cAAeC,KAAKC,aAAa,gBAAkB,YAGtE,IAAIC,eAAgBF,KAAKC,aAAa,QAClCE,YAAcR,WAAWS,QAAQF,gBAAkB,CACvDA,eAAgBC,YACZD,cACAP,WAAW,GAEfC,MAAMG,aAAa,OAAQG,cAG3B,IAAIG,OAAQL,KAAKC,aAAa,UAAY,EAC1CL,OAAMG,aAAa,QAASM,MAG5B,IAAIC,MAAON,KAAKC,aAAa,SAAW,EACxCL,OAAMG,aAAa,OAAQO,MAG3BV,MAAMG,aAAa,eAAgB,OAG/BC,KAAKC,aAAa,cACpBL,MAAMG,aAAa,YAAa,aAI9BC,KAAKC,aAAa,cACpBL,MAAMG,aAAa,YAAaC,KAAKC,aAAa,cAIhDD,KAAKC,aAAa,YACpBL,MAAMG,aAAa,UAAWC,KAAKC,aAAa,YAI9CD,KAAKC,aAAa,aACpBL,MAAMG,aAAa,WAAY,YAI7BC,KAAKC,aAAa,aACpBL,MAAMG,aAAa,WAAY,WAIjC,IAAIQ,UAAWP,KAAKC,aAAa,WAC7BM,WACFX,MAAMG,aAAa,WAAYQ,UAEjCP,KAAKQ,YAAYZ,MAGjB,IAAIa,aAAcT,KAAKC,aAAa,cACpC,IAAGQ,YAAa,CACd,GAAIC,OAAQb,SAASC,cAAc,QACnCY,OAAMC,YAAcJ,SACbE,YADa,YAEhBA,YACJT,KAAKQ,YAAYE,QAzErB,GAAIE,WAAYC,OAAOC,OAAOC,YAAYH,UAC1CA,WAAUI,gBAAkBtB,QAC5BG,SAASoB,gBAAgB,YAAaL,UAAAA","file":"app.js","sourcesContent":["let prototype = Object.create(HTMLElement.prototype);\nprototype.createdCallback = MNInput;\ndocument.registerElement('mn-input', {prototype});\n\nfunction MNInput() {\n  let validTypes = [\n    'text',\n    'password',\n    'email',\n  ];\n\n  let input = document.createElement('input');\n  input.setAttribute('placeholder', this.getAttribute('placeholder') || 'undefined');\n\n  // type attribute\n  let attributeType = this.getAttribute('type');\n  let isValidType = validTypes.indexOf(attributeType) >= 0;\n  attributeType = isValidType\n    ? attributeType\n    : validTypes[0];\n\n  input.setAttribute('type', attributeType);\n\n  // value attribute\n  let value = this.getAttribute('value') || '';\n  input.setAttribute('value', value);\n\n  // name attribute\n  let name = this.getAttribute('name') || '';\n  input.setAttribute('name', name);\n\n  // autocomplete attribute\n  input.setAttribute('autocomplete', 'off');\n\n  // autofocus attribute\n  if (this.getAttribute('autofocus')) {\n    input.setAttribute('autofocus', 'autofocus');\n  }\n\n  // maxlength attribute\n  if (this.getAttribute('maxlength')) {\n    input.setAttribute('maxlength', this.getAttribute('maxlength'));\n  }\n\n  // pattern attribute\n  if (this.getAttribute('pattern')) {\n    input.setAttribute('pattern', this.getAttribute('pattern'));\n  }\n\n  // pattern attribute\n  if (this.getAttribute('readonly')) {\n    input.setAttribute('readonly', 'readonly');\n  }\n\n  // pattern attribute\n  if (this.getAttribute('required')) {\n    input.setAttribute('required', 'required');\n  }\n\n  // disabled attribute\n  let disabled = this.getAttribute('disabled');\n  if (disabled) {\n    input.setAttribute('disabled', disabled);\n  }\n  this.appendChild(input);\n\n  // placeholder element\n  let placeholder = this.getAttribute('placeholder');\n  if(placeholder) {\n    let label = document.createElement('label');\n    label.textContent = disabled\n      ? `${placeholder} disabled`\n      : placeholder;\n    this.appendChild(label);\n  }\n}\n"],"sourceRoot":"/source/"}