{"version":3,"sources":["scripts/input.component.js"],"names":["MNInput","types","supportedType","indexOf","this","getAttribute","error","Error","shadowDom","createShadowRoot","input","document","createElement","setAttribute","appendChild","type","value","name","disabled","placeholder","label","textContent","prototype","Object","create","HTMLElement","createdCallback","registerElement"],"mappings":"YAIA,SAASA,WACP,GAAIC,QACF,OACA,YAEEC,cAAgBD,MAAME,QAAQC,KAAKC,aAAa,UAAY,GAAmC,OAA9BD,KAAKC,aAAa,OACvF,KAAKH,cAAe,CAClB,GAAII,OAAQ,GAAIC,OAAM,yDACtB,MAAMD,OAGR,GAAIE,WAAYJ,KAAKK,mBAEjBC,MAAQC,SAASC,cAAc,QACnCF,OAAMG,aAAa,cAAeT,KAAKC,aAAa,gBAAkB,aACtEG,UAAUM,YAAYJ,MAEtB,IAAIK,MAAOX,KAAKC,aAAa,SAAW,MACxCK,OAAMG,aAAa,OAAQE,KAE3B,IAAIC,OAAQZ,KAAKC,aAAa,UAAY,EAC1CK,OAAMG,aAAa,QAASG,MAE5B,IAAIC,MAAOb,KAAKC,aAAa,SAAW,EACxCK,OAAMG,aAAa,OAAQI,KAE3B,IAAIC,UAAWd,KAAKC,aAAa,WAC7Ba,WACFR,MAAMG,aAAa,WAAYK,SAGjC,IAAIC,aAAcf,KAAKC,aAAa,cACpC,IAAGc,YAAa,CACd,GAAIC,OAAQT,SAASC,cAAc,QACnCQ,OAAMC,YAAcF,YACpBX,UAAUM,YAAYM,QAvC1B,GAAIE,WAAYC,OAAOC,OAAOC,YAAYH,UAC1CA,WAAUI,gBAAkB1B,QAC5BW,SAASgB,gBAAgB,YAAaL,UAAAA","file":"app.js","sourcesContent":["let prototype = Object.create(HTMLElement.prototype);\nprototype.createdCallback = MNInput;\ndocument.registerElement('mn-input', {prototype});\n\nfunction MNInput() {\n  let types = [\n    'text',\n    'password',\n  ]\n  let supportedType = types.indexOf(this.getAttribute('type')) >= 0 || this.getAttribute('type') === null;\n  if (!supportedType) {\n    let error = new Error('Unsupported type - only text and password is supported');\n    throw error;\n    return error;\n  }\n  let shadowDom = this.createShadowRoot();\n\n  let input = document.createElement('input');\n  input.setAttribute('placeholder', this.getAttribute('placeholder') || 'undefined');\n  shadowDom.appendChild(input);\n\n  let type = this.getAttribute('type') || 'text';\n  input.setAttribute('type', type);\n\n  let value = this.getAttribute('value') || '';\n  input.setAttribute('value', value);\n\n  let name = this.getAttribute('name') || '';\n  input.setAttribute('name', name);\n\n  let disabled = this.getAttribute('disabled');\n  if (disabled) {\n    input.setAttribute('disabled', disabled);\n  }\n\n  let placeholder = this.getAttribute('placeholder');\n  if(placeholder) {\n    let label = document.createElement('label');\n    label.textContent = placeholder;\n    shadowDom.appendChild(label);\n  }\n}\n"],"sourceRoot":"/source/"}