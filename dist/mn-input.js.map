{"version":3,"sources":["scripts/mn-input.component.js"],"names":["MnInput","self","_this","_ret","_classCallCheck","this","setPlaceholder","setInput","_possibleConstructorReturn","placeholder","getAttribute","label","document","createElement","textContent","insertBefore","firstChild","getNameAndValue","attr","name","value","setAttribute","attribute","attributeSpec","validAttributes","filter","spec","isDefaultAttribute","hasOwnProperty","attributeValue","isValidValue","values","indexOf","default","input","attributes","Array","from","map","forEach","HTMLElement","customElements","define"],"mappings":"AAAA,sxCAEMA,QAAAA,SAAAA,cACJ,QAAAA,SAAYC,MAAM,GAAAC,OAAAC,IAIhB,OAJgBC,iBAAAC,KAAAL,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,OACbC,MAAKI,iBACLJ,MAAKK,WACLJ,KAAOF,KAAPO,2BAAAN,MAAAC,0GAIA,GAAIM,aAAcJ,KAAKK,aAAa,cAEpC,IAAID,YAAa,CACf,GAAIE,OAAQC,SAASC,cAAc,QACnCF,OAAMG,YAAcT,KAAKK,aAAa,YAC/BD,YADa,YAEhBA,YAEJJ,KAAKU,aAAaJ,MAAON,KAAKW,gDAyDhC,QAASC,iBAAgBC,MACvB,GAAIC,MAAOD,KAAKC,KACZC,MAAQF,KAAKE,KACjB,QAAQD,KAAAA,KAAMC,MAAAA,OAGhB,QAASC,cAAaC,WACpB,GAAIC,eAAgBC,gBAAgBC,OAAO,SAAAC,MAAA,MAAQA,MAAKP,OAASG,UAAUH,OAAM,GAC7EQ,mBAAqBJ,eAAiBA,cAAcK,eAAe,WACnEC,eAAiBP,UAAUF,KAE/B,IAAIO,mBAAoB,CACtB,GAAIG,cAAeP,cAAcK,eAAe,WAC3CL,cAAcQ,OAAOC,QAAQH,iBAAmB,EAEjDT,MAAQU,aACRD,eACAN,cAAcU,OAElBC,OAAMb,aAAaC,UAAUH,KAAMC,WAC1BS,iBACTK,MAAMb,aAAaC,UAAUH,KAAMU,gBAzEvC,GAAIL,mBAEAL,KAAM,OACNc,QAAS,OACTF,QACE,OACA,WACA,WAIFZ,KAAM,cACNc,QAAS,cAGTd,KAAM,UAGNA,KAAM,SAGNA,KAAM,eACNc,QAAS,QAGTd,KAAM,cAGNA,KAAM,cAGNA,KAAM,YAGNA,KAAM,aAGNA,KAAM,aAGNA,KAAM,aAINe,MAAQtB,SAASC,cAAc,SAC/BsB,WAAaC,MACdC,KAAKhC,KAAK8B,YACVG,IAAIrB,gBAEPkB,YAAWI,QAAQlB,cACnBhB,KAAKU,aAAamB,MAAO7B,KAAKW,yBAxEZwB,YAqGtBC,gBAAeC,OAAO,WAAY1C","file":"mn-input.js","sourcesContent":["'use strict';\n\nclass MnInput extends HTMLElement {\n  constructor(self) {\n    self = super(self);\n    this.setPlaceholder();\n    this.setInput();\n    return self;\n  }\n\n  setPlaceholder() {\n    let placeholder = this.getAttribute('placeholder');\n\n    if (placeholder) {\n      let label = document.createElement('label');\n      label.textContent = this.getAttribute('disabled')\n        ? `${placeholder} disabled`\n        : placeholder;\n\n      this.insertBefore(label, this.firstChild);\n    }\n  }\n\n  setInput() {\n    let validAttributes = [\n      {\n        name: 'type',\n        default: 'text',\n        values: [\n          'text',\n          'password',\n          'email',\n        ],\n      },\n      {\n        name: 'placeholder',\n        default: 'undefined',\n      },\n      {\n        name: 'value',\n      },\n      {\n        name: 'name',\n      },\n      {\n        name: 'autocomplete',\n        default: 'off',\n      },\n      {\n        name: 'autofocus',\n      },\n      {\n        name: 'maxlength',\n      },\n      {\n        name: 'pattern',\n      },\n      {\n        name: 'readonly',\n      },\n      {\n        name: 'required',\n      },\n      {\n        name: 'disabled',\n      },\n    ];\n\n    let input = document.createElement('input');\n    let attributes = Array\n      .from(this.attributes)\n      .map(getNameAndValue);\n\n    attributes.forEach(setAttribute);\n    this.insertBefore(input, this.firstChild);\n\n    function getNameAndValue(attr) {\n      let name = attr.name;\n      let value = attr.value;\n      return {name, value};\n    }\n\n    function setAttribute(attribute) {\n      let attributeSpec = validAttributes.filter(spec => spec.name === attribute.name)[0];\n      let isDefaultAttribute = attributeSpec && attributeSpec.hasOwnProperty('default');\n      let attributeValue = attribute.value;\n\n      if (isDefaultAttribute) {\n        let isValidValue = attributeSpec.hasOwnProperty('values')\n          && attributeSpec.values.indexOf(attributeValue) >= 0;\n\n        let value = isValidValue\n          ? attributeValue\n          : attributeSpec.default;\n\n        input.setAttribute(attribute.name, value);\n      } else if (attributeValue) {\n        input.setAttribute(attribute.name, attributeValue);\n      }\n    }\n  }\n}\n\ncustomElements.define('mn-input', MnInput);\n"],"sourceRoot":"/source/"}